plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'dev.cabotmc'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url "https://clojars.org/repo/"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.19.2-R0.1-SNAPSHOT'
    shadow project(":CommonClasses")
    shadow 'com.esotericsoftware:kryo:5.3.0'
    shadow 'com.github.forwardloop:glicko2s_2.11:0.9.4'
    shadow 'org.mongodb:mongodb-driver-sync:4.7.2'
    shadow 'kryonet:kryonet:2.21'
    compileOnly project(":EggRandomizer")
    compileOnly files("lib/uhc.jar")
    compileOnly files("lib/pingsystem.jar")
}

shadowJar {
    configurations = [project.configurations.shadow]
    minimize()
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
